# Start

# Thesis title: The Role of International Commitments in Combating the Illicit Distribution of Cocaine.
# Author: Raquel Baeta

# Data Source: United Nations Office on Drugs and Crime (UNODC).
# Variables: Annual wholesale and retail averages for all European countries in Euro, as well as the "Weighted* average, in Euro", and 
# "Euro-inflation-adjusted weighted* average, in 2020 Euro" for both wholesale and retail.

# Step 1: Install Required Packages
install.packages("readxl") # work with Excel files
install.packages("tidyr") # data reshaping
install.packages("dplyr") # data manipulation
install.packages("data.table") # data handling

# Step 2: Load Libraries
library(readxl)
library(tidyr)
library(dplyr)
library(data.table)

# Step 3: Set Working Directory
setwd("/Users/raquelbaeta/Desktop/working_sessions/datasets")

# Step 4: Load and clean retail price data
# Load the retail price data from the Excel file "price_dollar_western_europe.xlsx" and specify the relevant sheet and range. Rename 
# the first column to "country" for better clarity.
retail_prices <- read_excel("price_dollar_western_europe.xlsx", sheet = 2, range = "A5:AF26")
colnames(retail_prices)[1] <- "country" # rename first column

# Remove unwanted years and rows
# Use the %>% pipe operator from the "dplyr" package to perform a series of data manipulation steps.
retail_prices <- retail_prices %>% select(-c("1990", "1991", "1992", "1993", "1994", "1995", "2020")) %>% # remove unwanted years
  filter(!country %in% c("United Kingdom", "Weighted* average, US$", "Unweighted average, in US$", "Weighted* average, Euro", 
  "Euro-inflation-adjusted weighted* average, in 2020 Euro")) # filter out unwanted rows

# Reshape data
# Reshape the data from wide to long format using the pivot_longer() function from the "tidyr" package. This function helps transform 
# the yearly columns (1996 to 2019) into a single "year" column and their corresponding values into a "retail" column.
retail_prices <- pivot_longer(retail_prices, cols = c("1996":"2019"), names_to = "year", values_to = "retail")

# Step 5: Load and clean cocaine price data
# Load the wholesale price data from the Excel file and rename the first column to "country".
wholesale_prices <- read_excel("price_dollar_western_europe.xlsx", sheet = 2, range = "A34:AF55")
colnames(wholesale_prices)[1] <- "country" # rename first column

# Remove unwanted years and rows
# Use the %>% pipe operator from the "dplyr" package to perform a series of data manipulation steps.
wholesale_prices <- wholesale_prices %>% select(-c("1990", "1991", "1992", "1993", "1994", "1995", "2020")) %>% # remove unwanted years
  filter(!country %in% c("United Kingdom", "Weighted* average, US$", "Unweighted average, in US$",
  "Euro-inflation-adjusted weighted* average, in 2020 Euro", "Weighted* average, Euro per gram")) # filter out unwanted rows

# Reshape data
# Reshape the data from wide to long using the pivot_longer() function from the "tidyr" package. This function helps transform yearly 
# columns (1996 to 2019) into a single "year" column and their corresponding values into a "wholesale" column.
wholesale_prices <- pivot_longer(wholesale_prices, cols = c("1996":"2019"), names_to = "year", values_to = "wholesale")

# Step 6: Data Manipulation, Merging, and Export
# Merge retail and wholesale price data. Use the full_join() function from the "dplyr" package to merge the retail and wholesale price 
# data. Specify the columns "country" and "year" as the joining keys. The result is a data set named "cocaine_prices" that contains 
# both retail and wholesale prices for each country and year.
cocaine_prices <- full_join(retail_prices, wholesale_prices, by = c("country", "year"))

# Annual Cocaine Prices

# Step 7: [a] Load average retail and wholesale data
# Load and filter for the "Weighted* average, Euro" category.
retail_average <- read_excel("price_dollar_western_europe.xlsx", sheet = 2, range = "A5:AF26")
retail_average <- retail_average %>% filter(country == "Weighted* average, Euro")

# [b] Load average inflation-adjusted retail data
# Load and filter for the "Euro-inflation-adjusted weighted* average, in 2020 Euro" category.
retail_inflation_average <- read_excel("price_dollar_western_europe.xlsx", sheet = 2, range = "A5:AF26")
retail_inflation_average <- retail_inflation_average %>% filter(country == "Euro-inflation-adjusted weighted* average, in 2020 Euro")

# [c] Load average wholesale data
# Load and filter for the "Weighted* average, Euro per gram" category.
wholesale_average <- read_excel("price_dollar_western_europe.xlsx", sheet = 2, range = "A34:AF55")
wholesale_average <- wholesale_average %>% filter(country == "Weighted* average, Euro per gram")

# [d] Load average inflation-adjusted wholesale data
# Load the average inflation-adjusted wholesale price data and filter for the "Euro-inflation-adjusted weighted* average, in 2020 Euro" 
# category.
wholesale_inflation_average <- read_excel("price_dollar_western_europe.xlsx", sheet = 2, range = "A34:AF55")

wholesale_inflation_average <- wholesale_inflation_average %>% 
  filter(country == "Euro-inflation-adjusted weighted* average, in 2020 Euro")

# Step 8: Merge average price data and average inflation-adjusted data
# Use the merge() function to combine the different average price and average inflation-adjusted datasets based on the "year" column. 
# "all = TRUE" argument to ensure that all years are included in the final data set.
annual_price_average <- merge(retail_average, wholesale_average, by = "year", all = TRUE)
annual_price_average <- merge(annual_price_average, retail_inflation_average, by = "year", all = TRUE)
annual_price_average <- merge(annual_price_average, wholesale_inflation_average, by = "year", all = TRUE)

# Step 9: Export the merged datasets to CSV files 
# Using the fwrite() function from the "data.table" package create two CSV files named  "cocaine_prices.csv" and 
# "annual_price_average.csv," containing the cleaned and manipulated data.
fwrite(cocaine_prices, "cocaine_prices.csv")
fwrite(annual_price_average, "annual_price_average.csv")

# End
